
package caiseeglise;

import caiseeglise.Models.Sortie;
import caiseeglise.Models.Methodes;
import caiseeglise.SortieForm.SortieAjouter;
import caiseeglise.SortieForm.SortieModifier;
import caiseeglise.SortieForm.SortieSupprimer;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class SortieView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(SortieView.class.getName());

    /**
     * Creates new form SortieView
     */
    public SortieView() {
        initComponents();
        //appel de la fonction affiche
        affiche_Sortie();
        
         Style style = new Style();
        style.appliquerStyleTableau(TableSortie);
        style.appliquerStyleH1(label1);
        style.styliserBoutonPrimary(btnajouteSortie);
           style.styliserBoutonSuccess(txtrechecehmotif);
        style.styliserTextField(txtrecherceh);
        
        
        
         
    }
public JPanel getPanelSortie() {
        return this.PanleSortie;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanleSortie = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        btnajouteSortie = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSortie = new javax.swing.JTable();
        txtrecherceh = new javax.swing.JTextField();
        txtrechecehmotif = new javax.swing.JButton();
        btn_modifier_show = new javax.swing.JButton();
        btnsupprimeshow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setText("PAGE SORTIE");

        btnajouteSortie.setText("Ajouter");
        btnajouteSortie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnajouteSortieActionPerformed(evt);
            }
        });

        TableSortie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TableSortie);

        txtrecherceh.setToolTipText("");

        txtrechecehmotif.setText("Recherceh");
        txtrechecehmotif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechecehmotifActionPerformed(evt);
            }
        });

        btn_modifier_show.setText("Modifier");
        btn_modifier_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifier_showActionPerformed(evt);
            }
        });

        btnsupprimeshow.setText("Supprimer");
        btnsupprimeshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsupprimeshowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanleSortieLayout = new javax.swing.GroupLayout(PanleSortie);
        PanleSortie.setLayout(PanleSortieLayout);
        PanleSortieLayout.setHorizontalGroup(
            PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanleSortieLayout.createSequentialGroup()
                .addGroup(PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanleSortieLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnajouteSortie, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btn_modifier_show, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnsupprimeshow, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(txtrecherceh, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txtrechecehmotif, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanleSortieLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        PanleSortieLayout.setVerticalGroup(
            PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanleSortieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnsupprimeshow, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanleSortieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtrecherceh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtrechecehmotif, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnajouteSortie, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_modifier_show, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(PanleSortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanleSortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnajouteSortieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnajouteSortieActionPerformed
        // TODO add your handling code here:
        
          SortieAjouter Sortie = new SortieAjouter();
        Sortie.setLocationRelativeTo(null);
        Sortie.setVisible(true);
    }//GEN-LAST:event_btnajouteSortieActionPerformed

    private void txtrechecehmotifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechecehmotifActionPerformed
        // TODO add your handling code here:
   String motif = txtrecherceh.getText().trim(); // Vérifie si champ vide

    if (motif.isEmpty()) {
        Methodes.showInfo("Veuillez entrer un motif à rechercher.");
        return;
    }

    try {
        Connection conn = Methodes.getconnexion();
        if (conn == null) return;

        Sortie sortie = new Sortie(conn);
        List<Map<String, Object>> data = sortie.rechercherParMotif(motif);

        if (data.isEmpty()) {
            Methodes.showInfo("Aucun résultat trouvé pour le motif : " + motif);
            return; // ⛔ Ne pas mettre à jour le tableau si vide
        }

        // ✅ Seulement si on a des résultats : afficher dans la table
        Map<String, String> titres = Map.of(
            "idsortie", "ID",
            "motif", "Motif",
            "montantSortie", "Montant",
            "dateSortie", "Date",
            "ideglise", "ID Église"
        );

        DefaultTableModel model = Methodes.createTableModel(data, titres);
        TableSortie.setModel(model);

    } catch (SQLException e) {
        Methodes.showError("Erreur lors de la recherche : " + e.getMessage());
    }
        
    }//GEN-LAST:event_txtrechecehmotifActionPerformed

    private void btn_modifier_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifier_showActionPerformed
        // TODO add your handling code here:
          SortieModifier SortieModifier = new SortieModifier();
        SortieModifier.setLocationRelativeTo(null);
        SortieModifier.setVisible(true);
    }//GEN-LAST:event_btn_modifier_showActionPerformed

    private void btnsupprimeshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsupprimeshowActionPerformed
        // TODO add your handling code here:
          SortieSupprimer SortieSupprimer = new SortieSupprimer();
        SortieSupprimer.setLocationRelativeTo(null);
        SortieSupprimer.setVisible(true);
    }//GEN-LAST:event_btnsupprimeshowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new SortieView().setVisible(true));
    }
    
    public void affiche_Sortie(){
         try {
        Connection conn = Methodes.getconnexion();
        if (conn == null) return;

        Sortie sortie = new Sortie(conn);
        List<Map<String, Object>> data = sortie.afficheSorties();

        Map<String, String> titres = Map.of(
            "idsortie", "ID",
            "motif", "Motif",
            "montantSortie", "Montant",
            "dateSortie", "Date",
            "ideglise", "ID Église"
        );

        DefaultTableModel model = Methodes.createTableModel(data, titres);
        TableSortie.setModel(model); // ton JTable

    } catch (SQLException e) {
        Methodes.show("Erreur lors de l'affichage : " + e.getMessage());
    }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanleSortie;
    private javax.swing.JTable TableSortie;
    private javax.swing.JButton btn_modifier_show;
    private javax.swing.JButton btnajouteSortie;
    private javax.swing.JButton btnsupprimeshow;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JButton txtrechecehmotif;
    private javax.swing.JTextField txtrecherceh;
    // End of variables declaration//GEN-END:variables
}
